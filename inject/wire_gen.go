// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeEvent() (*AppContext, error) {
	cacheConnection, err := GetConnectionCache()
	if err != nil {
		return nil, err
	}
	cacheRepositoryImpl, err := NewCacheRepository(cacheConnection)
	if err != nil {
		return nil, err
	}
	sqlConnection, err := GetConnectionSql()
	if err != nil {
		return nil, err
	}
	sqlRepositoryImpl, err := NewSqlRepository(sqlConnection)
	if err != nil {
		return nil, err
	}
	repositoryImpl, err := NewRepository(sqlRepositoryImpl, cacheRepositoryImpl)
	if err != nil {
		return nil, err
	}
	appContext, err := NewAppContext(cacheRepositoryImpl, sqlRepositoryImpl, repositoryImpl)
	if err != nil {
		return nil, err
	}
	return appContext, nil
}

// wire.go:

var cacheSet = wire.NewSet(
	GetConnectionCache,
	NewCacheRepository, wire.Bind(new(CacheRepository), new(*CacheRepositoryImpl)),
)

var sqlSet = wire.NewSet(
	GetConnectionSql,
	NewSqlRepository, wire.Bind(new(SqlRepository), new(*SqlRepositoryImpl)),
)

var repositorySet = wire.NewSet(NewRepository, wire.Bind(new(Repository), new(*RepositoryImpl)))
